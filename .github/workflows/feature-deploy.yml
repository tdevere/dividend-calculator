name: Deploy Feature Branch to Dev Slot

on:
  push:
    branches:
      - 'feature/**'
    # Only deploy feature branches when actual code changes
    paths:
      - 'src/**'
      - 'public/**'
      - 'package*.json'
      - 'next.config.*'
      - 'tailwind.config.*'
      - 'tsconfig.json'
  workflow_dispatch:
    # Allow manual deployment of any branch to dev slot
    inputs:
      branch:
        description: 'Branch to deploy'
        required: false
        default: ''
        type: string

# Ensure only one feature deployment runs at a time
concurrency:
  group: feature-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-to-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Deployment Information
        run: |
          echo "🚀 Deploying Feature Branch to Development Slot"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Event: ${{ github.event_name }}"
          echo "Dev URL: https://dividend-calculator-app-dev.azurewebsites.net"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Prepare deployment package
        run: |
          mkdir -p deploy-package
          
          # Copy source files needed for Azure build
          cp -r src deploy-package/
          cp -r public deploy-package/
          cp package.json deploy-package/
          cp package-lock.json deploy-package/
          cp next.config.js deploy-package/
          cp tsconfig.json deploy-package/
          cp tailwind.config.ts deploy-package/
          cp postcss.config.mjs deploy-package/
          cp eslint.config.mjs deploy-package/
          cp next-env.d.ts deploy-package/
          
          # Copy built files
          if [ -d ".next" ]; then
            cp -r .next deploy-package/
          fi
          
          # Create server.js for Azure
          cat > deploy-package/server.js << 'EOF'
          const { createServer } = require('http')
          const { parse } = require('url')
          const next = require('next')
          
          const dev = process.env.NODE_ENV !== 'production'
          const hostname = process.env.WEBSITE_HOSTNAME || 'localhost'
          const port = process.env.PORT || 3000
          
          const app = next({ dev, hostname, port })
          const handle = app.getRequestHandler()
          
          app.prepare().then(() => {
            createServer(async (req, res) => {
              try {
                const parsedUrl = parse(req.url, true)
                await handle(req, res, parsedUrl)
              } catch (err) {
                console.error('Error occurred handling', req.url, err)
                res.statusCode = 500
                res.end('internal server error')
              }
            }).listen(port, (err) => {
              if (err) throw err
              console.log(`> Ready on http://${hostname}:${port}`)
            })
          })
          EOF

      - name: Create web.config for Azure
        run: |
          cat > deploy-package/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin"/>
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
              <iisnode watchedFiles="web.config;*.js"/>
            </system.webServer>
          </configuration>
          EOF

      - name: Deploy to Azure Development Slot
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: dev
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
          package: ./deploy-package

      - name: Deployment Success Notification
        run: |
          echo "🎉 Feature branch deployed successfully!"
          echo ""
          echo "📍 **Development Environment Access:**"
          echo "🌐 **Public URL:** https://dividend-calculator-app-dev.azurewebsites.net"
          echo "🔍 **Feature Branch:** ${{ github.ref_name }}"
          echo "📝 **Commit:** ${{ github.sha }}"
          echo ""
          echo "🧪 **Test your feature:**"
          echo "1. Open the dev URL in your browser"
          echo "2. Test the ExportFunctionality component"
          echo "3. Verify responsive design and animations"
          echo "4. Share the URL with stakeholders for review"
          echo ""
          echo "🔄 **Next Steps:**"
          echo "- Test thoroughly in the dev environment"
          echo "- Create/update the pull request when ready"
          echo "- Merge to main to deploy to production"

      - name: Comment on Pull Request
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/')
        uses: actions/github-script@v7
        with:
          script: |
            // Find the pull request for this branch
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });

            if (pulls.length > 0) {
              const pull = pulls[0];
              const comment = `## 🚀 Feature Branch Deployed to Development Slot

**🌐 Live Preview:** https://dividend-calculator-app-dev.azurewebsites.net

### 📋 Deployment Details
- **Branch:** \\\`${context.ref.replace('refs/heads/', '')}\\\`
- **Commit:** \\\`${context.sha.substring(0, 7)}\\\`
- **Environment:** Development Slot
- **Status:** ✅ Successfully Deployed

### 🧪 Testing Instructions
1. **Open the dev URL** to test the feature live
2. **Test all functionality** including the new ExportFunctionality component
3. **Verify responsive design** on different screen sizes
4. **Check animations and interactions** work smoothly

### 💡 Feedback
Please test the feature and provide feedback before merging to production!

---
*This comment was automatically generated by the feature deployment workflow.*`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pull.number,
                body: comment
              });
            }
